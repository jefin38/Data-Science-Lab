
DataFrame

*A DataFrame is the core data structure in Pandas for handling and analyzing data.
* It is a 2-dimensional labeled data structure with columns of different types.

------------------------------------------------------------------------------------

**Creating a dataset in Pandas**


import pandas as pd

# Create a sample dataset with 10 rows
data = {
    'ID': range(1, 11),
    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace', 'Hannah', 'Ivan', 'Judy'],
    'Age': [24, 30, 22, 29, 24, 33, 27, 21, 25, 28],
    'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Philadelphia', 'San Antonio', 'San Diego', 'Dallas', 'San Jose'],
    'Salary': [55000, 48000, 62000, 58000, 51000, 47000, 60000, 52000, 59000, 57000]
}

# Convert dictionary to DataFrame
df = pd.DataFrame(data)

# Display the first 5 rows of the DataFrame
print("First 5 rows of the dataset:")
print(df.head())

# Display the structure of DataFrame
print("\nDataFrame Structure:")
print(df.info())


------------------------------------------------------------------------------

**Creating a dataframe from list of list or tuples**

import pandas as pd

# Create a DataFrame from a list of lists
data = [
    [1, 'A', 10.5],
    [2, 'B', 20.5],
    [3, 'C', 30.5],
    [4, 'D', 40.5]
]

df = pd.DataFrame(data, columns=['Column1', 'Column2', 'Column3'])

# Display the DataFrame
print(df)

-------------------------------------------------------------------------------

**Creating a dataframe from dictionary**

import pandas as pd

# Create a DataFrame from a dictionary
data = {
    'Column1': [1, 2, 3, 4],
    'Column2': ['A', 'B', 'C', 'D'],
    'Column3': [10.5, 20.5, 30.5, 40.5]
}

df = pd.DataFrame(data)

# Display the DataFrame
print(df)

--------------------------------------------------------------------------------

**Creating an empty dataframe**

import pandas as pd

# Create an empty DataFrame with columns
df = pd.DataFrame(columns=['Column1', 'Column2', 'Column3'])

# Display the empty DataFrame
print(df)

